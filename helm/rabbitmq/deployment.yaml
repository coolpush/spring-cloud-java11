apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: springcloud
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: springcloud
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: arm64v8/rabbitmq:3.8.0-management-alpine
          imagePullPolicy: Always
          ports:
            - name: http
              protocol: TCP
              containerPort: 15672
            - name: amqp
              protocol: TCP
              containerPort: 5672
          readinessProbe:           # This readiness probe will delay the startup of the nex pod for 30 seconds. It ensures
            exec:                   # the node is most probably in a state that let the next node connect to this one.
              command: ["true"]     # Doing a real liveness or readiness probe will result in a stuck statfult set if the
            initialDelaySeconds: 30 # cluster is in a "pause_minority" state. In this state all health checks provided
            timeoutSeconds: 5       # by rabbitmq will fail, but the node should _not_ be restarted.
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: springcloud
            - name: RABBITMQ_DEFAULT_PASS
              value: springcloud
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: springcloud
  labels:
    app: rabbitmq
spec:
  ports:
    - name: message
      protocol: TCP
      port: 5672
      targetPort: 5672
    - name: web
      protocol: TCP
      port: 15672
      targetPort: 15672
  selector:
    app: rabbitmq
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: rabbitmq
  namespace: springcloud
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    external-dns.alpha.kubernetes.io/target: home.cluster.camp
spec:
  rules:
    - host: rabbitmq.cluster.camp
      http:
        paths:
          - path: /
            backend:
              serviceName: rabbitmq
              servicePort: 15672
