apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  labels:
    app: minio-storage-claim
  namespace: springcloud
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: nvme
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: minio
  namespace: springcloud
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-pvc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - master
      containers:
        - name: minio
          image: jessestuart/minio
          args:
            - server
            - /storage
          env:
            - name: MINIO_ACCESS_KEY
              value: "QW7N6ZSDET9KM3QTPEVW"
            - name: MINIO_SECRET_KEY
              value: "WmaVuPqClxz5WkwPvXmLk3wzPDvXZjvjVJocHKUI"
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: storage # must match the volume name, above
              mountPath: "/storage"
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: springcloud
spec:
  type: LoadBalancer
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: minio
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: minio
  namespace: springcloud
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    external-dns.alpha.kubernetes.io/target: home.cluster.camp
spec:
  rules:
    - host: minio.cluster.camp
      http:
        paths:
          - path: /
            backend:
              serviceName: minio
              servicePort: 9000